* {
    box-sizing: border-box;
}

.parent {
    display: flex;
    gap: 40px;
    align-items: center;
    padding: 30px;
    border: 1px dotted black;
}

.item {
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
}

.item.red {
    width: 150px;
    height: 150px;
    background-color: red;
    transform: translate(-20px, 50px); /**/

    /* Добавлять transition на сам елемент, а стили в псевдоклассе(hover) */
    /* Плавный переход */
    /* Нельзя анимировать display */

    transition: background-color 1s, color 1s, transform 1s;

    /* Сверху то же самое в одном свойстве
    transition-property: background-color;
    transition-duration: 1s; */

    /* transition-timing-function: ; прогуглить значения */
    /* transition-delay: 0.5s; задержка применения */
}

.item.red:hover {
    transform: translate(0, 0);
    background-color: pink;
    color: black;
}

.item.green {
    width: 100px;
    height: 100px;
    background-color: green;
    /* Поворот на 45 градусов, turn - 1turn = 360 градусов */
    /* transform: rotate(45deg);  */
    /* Сделать выше другого елемента */
    /* z-index: 1; */


    animation: spin 1s infinite linear;

    /* Сверху то же самое скорочено 
    animation-name: spin;
    animation-duration: 1s;
    animation-delay: 3s;  Задержка в секундах
    animation-iteration-count: infinite;
    animation-timing-function: linear; Плавность  */
}

/* При наведении останавливать */
.item.green:hover {
    animation-play-state: paused;
}

/* Анимация модуль 13 -35 минут */
@keyframes spin {
    /* from {
        transform: rotate(0);
    }
    
    to {
        transform: rotate(360deg);
    } */

    0% {
        transform: rotate(0);
    }

    /* 30% {
        transform: rotate(20deg);
        background-color: red;
    } */
    
    100% {
        transform: rotate(360deg);
    }
}

.item.blue {
    width: 50px;
    height: 50px;
    background-color: blue;
    /* Изменяет маштаб */
    transform: scale(2.5);
}

.item.orange {
    width: 150px;
    height: 150px;
    background-color: orange;

    /* Искривление елемента (очень редко) */
    transform: skew(20deg, 20deg);
}



/* Form */
.form-field {
    position: relative;
    margin-top: 100px;
    margin-bottom: 32px;
}

.form:focus-within {
    border: 1px solid black;
}

.form-label {
    position: absolute;
    top: 16px;
    left: 42px;
    font-size: 16px;
    line-height: 1.17;
    transition: transform .3s;
}

/* .form-input:focus + .form-label {
    transform: translate(-36px, -40px);
} */

.form-field:focus-within .form-label {
    transform: translate(-36px, -40px);
}

.form-input {
    padding: 16px 42px;
    width: 100%;
    border: 1px solid black;
    border-radius: 8px;
    background-color: transparent;
}

.form-input:focus {
    border-color: black;
    outline: none;
}


.checkbox {
    position: relative;
}

.checkbox-input {
    appearance: none;
}

.checkbox-label {
    padding-left: 24px;
}

.checkbox-input:checked + .checkbox-label::before {
    background-color: green;
}

.checkbox-label::before {
    position: absolute;
    top: 0;
    left: 0;
    content: '';
    width: 16px;
    height: 16px;
    border: 1px solid gray;
    border-radius: 2px;
}

.visually-hidden {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}